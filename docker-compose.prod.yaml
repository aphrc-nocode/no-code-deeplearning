version: '3.8'

# Production configuration for no-code AI platform
services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - app_models:/app/models
      - app_datasets:/app/datasets
      - app_logs:/app/logs
    env_file:
      - .env.prod
    depends_on:
      - mlflow
      - redis
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlruns
      - app_logs:/mlflow-logs
    env_file:
      - .env.prod
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/2.0/mlflow/experiments/list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  redis:
    image: redis:7.0-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - ai-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - app
      - mlflow
    networks:
      - ai-network
    restart: unless-stopped

networks:
  ai-network:
    driver: bridge

volumes:
  app_models:
  app_datasets:
  app_logs:
  mlflow_data:
  redis_data:
